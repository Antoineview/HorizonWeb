"use client";

import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import Image from "next/image";
import styles from "../Styles/equipe.module.css";

const teamMembers = [
  {
    id: 1,
    name: "Fanny ALACOQUE",
    role: "üé® Responsable du graphisme et du mode multijoueur",
    description:
      "N√©e en 2006, Fanny est la cheffe de projet et l'image de l'√©quipe. Passionn√©e d'informatique et experte en programmation, elle insuffle cr√©ativit√© et innovation au projet. Grande amatrice de jeux vid√©o, elle met sa connaissance approfondie du domaine au service de l'√©quipe, faisant d'elle une source d'inspiration incontournable.",
    image: "/fanny.png",
  },
  {
    id: 2,
    name: "Antoine RICHARD-CAPPONI",
    role: "üîç Responsable de la R&D des niveaux et du site web",
    description:
      "Antoine, n√© en 2007, est sous-chef de l'√©quipe et g√®re la planification des r√©unions. Cr√©atif et passionn√©, il con√ßoit des designs uniques et explore des id√©es de gameplay innovantes, inspir√©es notamment par l'origami. Admirateur du design √©pur√© d'Apple, il apporte une expertise technique pr√©cieuse √† l'√©quipe, notamment, sur le site web.",
    image: "/antoine.png",
  },
  {
    id: 3,
    name: "Louis CHABERT",
    role: "üåê Responsable de la cr√©ation et de la gestion du site web",
    description:
      "N√© en 2006, Louis est un pilier de l'√©quipe, appr√©ci√© pour sa rigueur et son sens de l'organisation. Son exp√©rience en assistance technique chez Apple enrichit le projet de sa patience et de son altruisme. Amateur de voyages, il puise son inspiration dans les paysages tropicaux et la plong√©e sous-marine.",
    image: "/louis.png",
  },
  {
    id: 4,
    name: "Elian DUFRAISSE",
    role: "ü§ñ Responsable de l'intelligence artificielle",
    description:
      "N√©e en 2006, Elian est une touche-√†-tout curieuse et polyvalente, avec un excellent ≈ìil pour les d√©tails. Forte de cinq ann√©es pass√©es au Japon, elle combine ouverture d'esprit et cr√©ativit√©. Son expertise en orthographe et son enthousiasme pour les projets insolites en font une alli√©e pr√©cieuse pour l'√©quipe.",
    image: "/elian.png",
  },
  {
    id: 5,
    name: "El-Ferdaous BOUHARIS",
    role: "üé• Responsable du son et de l'animation",
    description:
      "El-Ferdaous, n√©e en 2006, est passionn√©e par l'√©cologie et la biodiversit√©. Son talent pour concevoir des paysages naturels r√©alistes, associ√© √† sa cr√©ativit√© et son aisance √† communiquer, fait d'elle un atout cl√© de l'√©quipe. Sa vision durable enrichit le projet √† chaque √©tape.",
    image: "/firdaws.png",
  },
];

export default function Equipe() {
  const [selectedId, setSelectedId] = useState(null);

  // Prefixe pour √©viter les conflits d'ID avec le composant Jeu
  const idPrefix = "equipe-";

  return (
    <div className={styles.teamGallery}>
      <div className={styles.titleContainer}>
        <h1 className={styles.title}>ü§ù Notre √©quipe</h1>
        <p className={styles.subtitle}>Une √©quipe, une passion</p>
        <div className={styles.titleUnderline}></div>
      </div>
      <div className={styles.galleryGrid}>
        {teamMembers.map((member) => (
          <motion.div
            key={member.id}
            layoutId={`${idPrefix}card-${member.id}`}
            onClick={() => setSelectedId(member.id)}
            className={styles.memberCard}
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            <motion.div
              layoutId={`${idPrefix}image-container-${member.id}`}
              className={styles.imageContainer}
            >
              <Image
                src={member.image}
                alt={member.name}
                width={200}
                height={200}
                className={styles.memberImage}
              />
            </motion.div>
            <motion.h2
              layoutId={`${idPrefix}name-${member.id}`}
              className={styles.memberName}
            >
              {member.name}
            </motion.h2>
            <motion.p
              layoutId={`${idPrefix}role-${member.id}`}
              className={styles.memberRole}
            >
              {member.role}
            </motion.p>
          </motion.div>
        ))}
      </div>

      <AnimatePresence>
        {selectedId && (
          <motion.div
            key="overlay"
            initial={{ backgroundColor: "rgba(0, 0, 0, 0)" }}
            animate={{ backgroundColor: "rgba(0, 0, 0, 0.5)" }}
            exit={{ backgroundColor: "rgba(0, 0, 0, 0)" }}
            className={styles.overlay}
            onClick={() => setSelectedId(null)}
          >
            <motion.div
              layoutId={`${idPrefix}card-${selectedId}`}
              className={styles.expandedCard}
              onClick={(e) => e.stopPropagation()}
            >
              <button
                className={styles.closeButton}
                onClick={() => setSelectedId(null)}
                aria-label="Fermer"
              >
                &times;
              </button>
              {(() => {
                const member = teamMembers.find((m) => m.id === selectedId);
                if (!member) return null;
                return (
                  <>
                    <motion.div
                      layoutId={`${idPrefix}image-container-${member.id}`}
                      className={styles.expandedImageContainer}
                    >
                      <Image
                        src={member.image}
                        alt={member.name}
                        width={300}
                        height={300}
                        className={styles.expandedMemberImage}
                      />
                    </motion.div>
                    <motion.h2
                      layoutId={`${idPrefix}name-${member.id}`}
                      className={styles.expandedMemberName}
                    >
                      {member.name}
                    </motion.h2>
                    <motion.p
                      layoutId={`${idPrefix}role-${member.id}`}
                      className={styles.expandedMemberRole}
                    >
                      {member.role}
                    </motion.p>
                    <motion.p
                      initial={{ opacity: 0 }}
                      animate={{ opacity: 1 }}
                      exit={{ opacity: 0 }}
                      className={styles.memberDescription}
                    >
                      {member.description}
                    </motion.p>
                  </>
                );
              })()}
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
}