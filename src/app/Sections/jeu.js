"use client";

import React, { useState } from "react";
import { motion } from "framer-motion";
import Image from "next/image";
import styles from "../Styles/jeu.module.css";

const features = [
  {
    id: 1,
    title: "üé≤ G√©n√©ration proc√©durale et al√©atoire des salles",
    description:
      "Le c≈ìur d'HorizonBreak repose sur une exp√©rience unique √† chaque partie gr√¢ce √† la g√©n√©ration al√©atoire et proc√©durale des salles. Les joueurs explorent cinq d√©fis th√©matiques, chaque parcours √©tant impr√©visible, emp√™chant toute anticipation. Certaines salles s'adaptent dynamiquement au contexte ou au niveau des joueurs, cr√©ant une exp√©rience sur mesure. Cette m√©canique favorise la rejouabilit√© et refl√®te l'id√©e que chaque d√©cision entra√Æne des cons√©quences inattendues. Elle renforce √©galement l'immersion en proposant un environnement toujours renouvel√©.",
    image: "/images/features/feature1.jpg",
  },
  {
    id: 2,
    title: "üéÆ Mini-jeux th√©matiques ax√©s sur des dilemmes soci√©taux",
    description:
      "Chaque salle propose un mini-jeu qui aborde des probl√©matiques contemporaines (√©cologie, inclusion, responsabilit√© soci√©tale) de mani√®re ludique et implicite. Les joueurs g√®rent des ressources, coop√®rent pour surmonter des obstacles ou prennent des d√©cisions rapides face √† des situations complexes. Ces sc√©narios √©ducatifs stimulent la r√©flexion sans moralisation directe, renfor√ßant l'impact du jeu sur la conscience des enjeux mondiaux.",
    image: "/images/features/feature2.jpg",
  },
  {
    id: 3,
    title: "ü§ù Comp√©tition et coop√©ration dynamique",
    description:
      "HorizonBreak m√©lange habilement comp√©tition et coop√©ration, cr√©ant une tension positive. Bien que les joueurs cherchent √† s'√©chapper le plus vite possible, certains d√©fis exigent une collaboration √©troite pour progresser. Ce syst√®me engage les participants dans une r√©flexion sur la solidarit√© et l'importance des interactions sociales tout en maintenant une dynamique comp√©titive motivante.",
    image: "/images/features/feature3.jpg",
  },
  {
    id: 4,
    title: "üåç Sensibilisation subtile √† travers un gameplay immersif",
    description:
      "Le jeu utilise des m√©caniques et des environnements immersifs pour sensibiliser √† des enjeux majeurs comme le changement climatique ou les in√©galit√©s. Plut√¥t que d'√™tre au centre des interactions, ces th√®mes sont int√©gr√©s subtilement, permettant une prise de conscience naturelle. Les joueurs s'amusent tout en d√©veloppant une compr√©hension des probl√©matiques abord√©es.",
    image: "/images/features/feature4.jpg",
  },
  {
    id: 5,
    title: "üé® Environnement graphique √©volutif et immersif",
    description:
      "Le cadre visuel d'HorizonBreak sert de toile de fond dynamique, refl√©tant la diversit√© des th√®mes abord√©s. Bien qu'il ne soit pas central dans chaque interaction, l'environnement enrichit l'exp√©rience globale par sa richesse graphique et sa coh√©rence avec les messages du jeu. Les graphismes, con√ßus pour √™tre accessibles et stylis√©s, contribuent √† maintenir l'int√©r√™t des joueurs.",
    image: "/environnement.png",
  },
  {
    id: 6,
    title: "üë• Accessibilit√© et convivialit√©",
    description:
      "Avec des commandes intuitives et des r√®gles claires, HorizonBreak vise un public vari√©, allant des joueurs occasionnels aux passionn√©s. Cette accessibilit√© est renforc√©e par un gameplay multijoueur favorisant les √©changes et le plaisir collectif. L'objectif est de rassembler des individus de diff√©rents horizons autour d'une exp√©rience ludique et enrichissante.",
    image: "/images/features/feature6.jpg",
  },
];

export default function Jeu() {
  return (
    <div className={styles.container}>
      <h1 className={styles.title}>HorizonBreak - Notre Jeu</h1>
      <motion.div
        className={styles.featureList}
        initial="hidden"
        animate="visible"
        variants={{
          hidden: { opacity: 0, y: 20 },
          visible: { opacity: 1, y: 0, transition: { staggerChildren: 0.2 } },
        }}
      >
        {features.map((feature) => (
          <motion.div
            key={feature.id}
            className={styles.featureCard}
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            variants={{
              hidden: { opacity: 0, y: 20 },
              visible: { opacity: 1, y: 0 },
            }}
          >
            <div className={styles.featureImage}>
              <div className={styles.imageWrapper}>
                <Image
                  src={feature.image}
                  width={600}
                  height={400}
                  priority
                />
              </div>
              <div className={styles.overlay}>
                <p>{feature.description}</p>
              </div>
            </div>
            <h2 className={styles.featureTitle}>{feature.title}</h2>
          </motion.div>
        ))}
      </motion.div>
    </div>
  );
}